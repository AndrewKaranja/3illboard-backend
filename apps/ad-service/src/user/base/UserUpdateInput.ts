/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdvertismentUpdateManyWithoutUsersInput } from "./AdvertismentUpdateManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { BookingUpdateManyWithoutUsersInput } from "./BookingUpdateManyWithoutUsersInput";
import { NotificationUpdateManyWithoutUsersInput } from "./NotificationUpdateManyWithoutUsersInput";
import { RatingUpdateManyWithoutUsersInput } from "./RatingUpdateManyWithoutUsersInput";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SpaceUpdateManyWithoutUsersInput } from "./SpaceUpdateManyWithoutUsersInput";
import { TransactionUpdateManyWithoutUsersInput } from "./TransactionUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdvertismentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AdvertismentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AdvertismentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  advertisments?: AdvertismentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastLogin?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => SpaceUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SpaceUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SpaceUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  spaces?: SpaceUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
