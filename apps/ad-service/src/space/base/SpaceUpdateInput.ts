/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdvertismentUpdateManyWithoutSpacesInput } from "./AdvertismentUpdateManyWithoutSpacesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { BookingUpdateManyWithoutSpacesInput } from "./BookingUpdateManyWithoutSpacesInput";
import { RatingUpdateManyWithoutSpacesInput } from "./RatingUpdateManyWithoutSpacesInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class SpaceUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdvertismentUpdateManyWithoutSpacesInput,
  })
  @ValidateNested()
  @Type(() => AdvertismentUpdateManyWithoutSpacesInput)
  @IsOptional()
  @Field(() => AdvertismentUpdateManyWithoutSpacesInput, {
    nullable: true,
  })
  advertisments?: AdvertismentUpdateManyWithoutSpacesInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  availability?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutSpacesInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutSpacesInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutSpacesInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutSpacesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  dimensions?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ownerId?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photos?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutSpacesInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutSpacesInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutSpacesInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutSpacesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  spaceId?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  spaceType?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { SpaceUpdateInput as SpaceUpdateInput };
